{"paragraphs":[{"text":"%pyspark\r\n\r\nimport pandas as pd\r\nimport numpy as np\r\n\r\nfood_df = pd.read_csv('https://drive.google.com/uc?export=download&id=16lwHeyJycJQp0Ux3Wzngu9zqcEutcsnc')","user":"anonymous","dateUpdated":"2024-04-29T22:16:48+0700","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1714403784898_561452744","id":"20240429-162236_740882462","dateCreated":"2024-04-29T22:16:24+0700","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1050","dateFinished":"2024-04-29T22:16:51+0700","dateStarted":"2024-04-29T22:16:48+0700"},{"text":"%pyspark\n\nfood_df.info()","user":"anonymous","dateUpdated":"2024-04-29T22:16:52+0700","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 26237 entries, 0 to 26236\nData columns (total 14 columns):\n #   Column         Non-Null Count  Dtype  \n---  ------         --------------  -----  \n 0   menu_item_id   26237 non-null  int64  \n 1   food_category  26237 non-null  object \n 2   restaurant     26237 non-null  object \n 3   item_name      26237 non-null  object \n 4   calories       25786 non-null  object \n 5   total_fat      25535 non-null  float64\n 6   saturated_fat  25417 non-null  object \n 7   trans_fat      23996 non-null  object \n 8   cholesterol    25202 non-null  object \n 9   sodium         25272 non-null  object \n 10  carbohydrates  25273 non-null  object \n 11  dietary_fiber  24807 non-null  object \n 12  sugar          25194 non-null  object \n 13  protein        25221 non-null  object \ndtypes: float64(1), int64(1), object(12)\nmemory usage: 2.8+ MB\n"}]},"apps":[],"jobName":"paragraph_1714403784912_1735991150","id":"20240429-162451_733811201","dateCreated":"2024-04-29T22:16:24+0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1051","dateFinished":"2024-04-29T22:16:52+0700","dateStarted":"2024-04-29T22:16:52+0700"},{"text":"%pyspark\n# Loại bỏ các hàng chứa giá trị null\nfood_df.dropna(inplace=True)","user":"anonymous","dateUpdated":"2024-04-29T22:16:55+0700","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1714403784913_-717583781","id":"20240429-163010_1234313059","dateCreated":"2024-04-29T22:16:24+0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1052","dateFinished":"2024-04-29T22:16:55+0700","dateStarted":"2024-04-29T22:16:55+0700"},{"text":"%pyspark\n# Chuyển các cột dinh dưỡng sang kiểu số\nnutrient_columns = ['calories', 'saturated_fat', 'trans_fat', 'cholesterol', 'sodium', 'carbohydrates', 'dietary_fiber', 'sugar', 'protein']\n\nfor column in nutrient_columns:\n    food_df[column] = pd.to_numeric(food_df[column], errors='coerce')\n\n# Loại bỏ các hàng có giá trị NaN trong các cột nutrient_columns\nfood_df = food_df.dropna(subset=nutrient_columns)\n\n# Kiểm tra lại kiểu dữ liệu của các cột sau khi chuyển đổi\nprint(food_df.dtypes)","user":"anonymous","dateUpdated":"2024-04-29T22:16:56+0700","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"menu_item_id       int64\nfood_category     object\nrestaurant        object\nitem_name         object\ncalories         float64\ntotal_fat        float64\nsaturated_fat    float64\ntrans_fat        float64\ncholesterol      float64\nsodium           float64\ncarbohydrates    float64\ndietary_fiber    float64\nsugar            float64\nprotein          float64\ndtype: object\n"}]},"apps":[],"jobName":"paragraph_1714403784915_1744523427","id":"20240429-162739_1635477857","dateCreated":"2024-04-29T22:16:24+0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1053","dateFinished":"2024-04-29T22:16:56+0700","dateStarted":"2024-04-29T22:16:56+0700"},{"text":"%pyspark\nfood_df = food_df[['calories', 'total_fat', 'carbohydrates', 'protein', 'item_name']]\nprint(food_df.to_numpy())","user":"anonymous","dateUpdated":"2024-04-29T22:17:01+0700","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[[370.0 22.0 26.0 16.0 'French Onion Soup']\n [220.0 12.0 22.0 5.0 'Tomato Basil Soup']\n [280.0 15.0 26.0 11.0 'Chicken Tortilla Soup']\n ...\n [1150.0 62.0 48.0 100.0 '10 Chicken Fingers, Buffalo Garlic Blaze']\n [680.0 33.0 49.0 47.0 '10 Boneless Wings, Tongue Torch']\n [780.0 45.0 47.0 47.0 '10 Boneless Wings, Buffalo Garlic Blaze']]\n"}]},"apps":[],"jobName":"paragraph_1714403784917_2128649043","id":"20240429-162924_759480893","dateCreated":"2024-04-29T22:16:24+0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1054","dateFinished":"2024-04-29T22:17:01+0700","dateStarted":"2024-04-29T22:17:01+0700"},{"text":"%md\n1. Tính CÂN NẶNG LÝ TƯỞNG (CNLT)\n\n    CNLT = [ chiều cao (cm) – 100 ] x 0.9   (kg)\n\n\n2. Tính nhu cầu năng lượng\n\n| Lao động |                            Nhu cầu năng lượng                   |\n|----------|-----------------------------------------------------------------|\n|               |             Nam              |             Nữ              |\n| Nhẹ           | CNLT x 30 Kcal/kg/ngày       |    CNLT x 25 Kcal/kg/ngày   |\n| Trung bình    | CNLT x 35 Kcal/kg/ngày       |    CNLT x 30 Kcal/kg/ngày   |\n| Nặng          | CNLT x 45 Kcal/kg/ngày       |    CNLT x 40 Kcal/kg/ngày   |\n\n3. Tính NHU CẦU CÁC CHẤT DINH DƯỠNG.\n\n– Các chất bột đường: 55 – 60% so với tổng năng lượng. (Với 1g chất bột đường cung cấp 4 kcal). Chọn các thực phẩm hấp thu chậm như: gao mầm, gạo tím than Sóc Trăng, gạo ST đỏ, khoai, bắp…..\n\n– Các chất đạm: 15 – 20% so với tổng năng lượng.  (Với 1g chất đạm cung cấp 4 kcal). Chọn các loại cá, hải sản, thịt nạt bỏ da, đậu hủ…\n\n– Các chất béo: tối đa 25% so với tổng năng lượng. (Với 1g chất béo cung cấp 9 kcal). Chọn các loại dầu thực vật, mỡ cá….\n\n\n\nTham khảo thêm ở [Link](https://phanthanhhieu82.wordpress.com/2014/10/30/cach-tinh-nhu-cau-nang-luong-va-cac-chat-dinh-duong/?utm_source=zalo&utm_medium=zalo&utm_campaign=zalo)","user":"anonymous","dateUpdated":"2024-04-29T22:22:58+0700","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1714404137344_1486645133","id":"20240429-222217_1498220600","dateCreated":"2024-04-29T22:22:17+0700","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2670","dateFinished":"2024-04-29T22:22:58+0700","dateStarted":"2024-04-29T22:22:58+0700","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ol>\n  <li>\n    <p>Tính CÂN NẶNG LÝ TƯỞNG (CNLT)</p>\n    <p>CNLT = [ chiều cao (cm) – 100 ] x 0.9 (kg)</p>\n  </li>\n  <li>\n  <p>Tính nhu cầu năng lượng</p></li>\n</ol>\n<table>\n  <thead>\n    <tr>\n      <th>Lao động </th>\n      <th>Nhu cầu năng lượng </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td> </td>\n      <td>Nam </td>\n      <td>Nữ </td>\n    </tr>\n    <tr>\n      <td>Nhẹ </td>\n      <td>CNLT x 30 Kcal/kg/ngày </td>\n      <td>CNLT x 25 Kcal/kg/ngày </td>\n    </tr>\n    <tr>\n      <td>Trung bình </td>\n      <td>CNLT x 35 Kcal/kg/ngày </td>\n      <td>CNLT x 30 Kcal/kg/ngày </td>\n    </tr>\n    <tr>\n      <td>Nặng </td>\n      <td>CNLT x 45 Kcal/kg/ngày </td>\n      <td>CNLT x 40 Kcal/kg/ngày </td>\n    </tr>\n  </tbody>\n</table>\n<ol>\n  <li>Tính NHU CẦU CÁC CHẤT DINH DƯỠNG.</li>\n</ol>\n<p>– Các chất bột đường: 55 – 60% so với tổng năng lượng. (Với 1g chất bột đường cung cấp 4 kcal). Chọn các thực phẩm hấp thu chậm như: gao mầm, gạo tím than Sóc Trăng, gạo ST đỏ, khoai, bắp…..</p>\n<p>– Các chất đạm: 15 – 20% so với tổng năng lượng. (Với 1g chất đạm cung cấp 4 kcal). Chọn các loại cá, hải sản, thịt nạt bỏ da, đậu hủ…</p>\n<p>– Các chất béo: tối đa 25% so với tổng năng lượng. (Với 1g chất béo cung cấp 9 kcal). Chọn các loại dầu thực vật, mỡ cá….</p>\n<p>Tham khảo thêm ở <a href=\"https://phanthanhhieu82.wordpress.com/2014/10/30/cach-tinh-nhu-cau-nang-luong-va-cac-chat-dinh-duong/?utm_source=zalo&utm_medium=zalo&utm_campaign=zalo\">Link</a></p>\n</div>"}]}},{"text":"%pyspark\ndef ideal_weight(height):\n    # Tính cân nặng lý tưởng\n    ideal_weight = (height - 100) * 0.9\n    return ideal_weight\n\ndef energy_requirement(weight, activity_level, gender):\n    if activity_level == \"Light\":\n        if gender == \"Male\":\n            return weight * 30\n        elif gender == \"Female\":\n            return weight * 25\n    elif activity_level == \"Moderate\":\n        if gender == \"Male\":\n            return weight * 35\n        elif gender == \"Female\":\n            return weight * 30\n    elif activity_level == \"Heavy\":\n        if gender == \"Male\":\n            return weight * 45\n        elif gender == \"Female\":\n            return weight * 40\n\ndef nutrient_requirements(energy_requirement):\n    # Tính nhu cầu các chất dinh dưỡng\n    carbohydrate = (energy_requirement * 0.6) / 4\n    protein = (energy_requirement * 0.2) / 4\n    fat = (energy_requirement * 0.2) / 9\n    return fat, carbohydrate, protein","user":"anonymous","dateUpdated":"2024-04-29T22:17:05+0700","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1714403784918_-732927426","id":"20240429-162505_1115330516","dateCreated":"2024-04-29T22:16:24+0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1055","dateFinished":"2024-04-29T22:17:05+0700","dateStarted":"2024-04-29T22:17:05+0700"},{"text":"%pyspark\nheight = 170  # Chiều cao (cm)\ngender = \"Female\"\nactivity_level = \"Heavy\"\n\n# Tính cân nặng lý tưởng\nweight = ideal_weight(height)\n\n# Tính nhu cầu năng lượng\ntarget_calories = energy_requirement(weight, activity_level, gender)\n\n# Tính nhu cầu các chất dinh dưỡng\ntarget_total_fat, target_carbohydrate, target_protein = nutrient_requirements(target_calories)\n","user":"anonymous","dateUpdated":"2024-04-29T22:17:07+0700","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1714403784920_1735018786","id":"20240429-162555_476326804","dateCreated":"2024-04-29T22:16:24+0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1056","dateFinished":"2024-04-29T22:17:07+0700","dateStarted":"2024-04-29T22:17:07+0700"},{"text":"%pyspark\n\ndef find_random_meal_combination(food_df, target_calories, target_total_fat, target_carbohydrate, target_protein, num_iterations=10000):\n    best_combination = None\n    best_error = float('inf')\n    food_list = food_df.to_numpy()\n    target = np.array([target_calories, target_total_fat, target_carbohydrate, target_protein])\n    for _ in range(num_iterations):\n        combinations = np.random.randint(food_list.shape[0], size=3)\n        food_combinations = food_list[combinations]\n        sums = np.sum(food_combinations[:, :-1], axis = 0)\n        relative_error = np.sum(np.abs((sums - target) / target))\n        if(relative_error < best_error):\n            best_error = relative_error\n            best_combination = food_combinations\n    return best_combination, best_error","user":"anonymous","dateUpdated":"2024-04-29T22:35:30+0700","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1714403784922_-1929953245","id":"20240429-162631_1662710091","dateCreated":"2024-04-29T22:16:24+0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1057","dateFinished":"2024-04-29T22:33:04+0700","dateStarted":"2024-04-29T22:33:04+0700","title":"Đưa ra đề xuất bằng cách random, tìm kiếm kết quả tối ưu"},{"text":"%pyspark\nheight_str = z.input(\"Nhập chiều cao (cm)\")\ngender_str = z.input(\"Nhập giới tính (Female or Male)\")\nactivity_level_str = z.input(\"Nhập mức độ lao động: (Light or Moderate or Heavy)\")\n\nheight = float(height_str)\n\n\n# Tính cân nặng lý tưởng\nweight = ideal_weight(height)\n\n# Tính nhu cầu năng lượng\ntarget_calories = energy_requirement(weight, activity_level, gender)\n\n# Tính nhu cầu các chất dinh dưỡng\ntarget_total_fat, target_carbohydrate, target_protein = nutrient_requirements(target_calories)\n\nprint(\"Nhu cầu các chất dinh dưỡng\")\nprint(\"Calories: \", target_calories)\nprint(\"Fat: \", target_total_fat)\nprint(\"Carbohydrate\", target_carbohydrate)\nprint(\"Protein\", target_protein)\nmeal_combination, best_error = find_random_meal_combination(food_df, target_calories, target_total_fat, target_carbohydrate, target_protein)\nprint(\"Cân nặng lý tưởng:\", weight, \"kg\")\nprint(\"Tên của 3 món ăn phù hợp:\\n\", meal_combination[:, -1])\nprint(\"Lỗi\", best_error)","user":"anonymous","dateUpdated":"2024-04-29T22:33:06+0700","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{"Nhập chiều cao (cm)":"160","Nhập giới tính (Female or Male)":"Male","Nhập mức độ lao động: (Light or Moderate or Heavy)":"Heavy"},"forms":{"Nhập chiều cao (cm)":{"type":"TextBox","name":"Nhập chiều cao (cm)","displayName":"Nhập chiều cao (cm)","defaultValue":"","hidden":false,"$$hashKey":"object:3254"},"Nhập giới tính (Female or Male)":{"type":"TextBox","name":"Nhập giới tính (Female or Male)","displayName":"Nhập giới tính (Female or Male)","defaultValue":"","hidden":false,"$$hashKey":"object:3255"},"Nhập mức độ lao động: (Light or Moderate or Heavy)":{"type":"TextBox","name":"Nhập mức độ lao động: (Light or Moderate or Heavy)","displayName":"Nhập mức độ lao động: (Light or Moderate or Heavy)","defaultValue":"","hidden":false,"$$hashKey":"object:3256"}}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Nhu cầu các chất dinh dưỡng\nCalories:  2160.0\nFat:  48.0\nCarbohydrate 324.0\nProtein 108.0\nCân nặng lý tưởng: 54.0 kg\nTên của 3 món ăn phù hợp:\n ['Jalapeno Beans, Large, 12 Servings'\n \"Chocolate Concrete Mixer made w/ Reese's, Mini\" 'Buffalo Chicken']\nLỗi 0.27777777777777785\n"}]},"apps":[],"jobName":"paragraph_1714403784923_-335431193","id":"20240429-164632_1014954743","dateCreated":"2024-04-29T22:16:24+0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1058","dateFinished":"2024-04-29T22:33:06+0700","dateStarted":"2024-04-29T22:33:06+0700"},{"title":"Dùng thuật toán KNN để tìm 3 món ăn phù hợp với mục tiêu nhất","text":"%pyspark\nfrom sklearn.neighbors import NearestNeighbors\n\ndef find_best_meal_combination(food_df, target_calories, target_total_fat, target_carbohydrate, target_protein, k=3):\n    target_values = np.array([target_calories, target_total_fat, target_carbohydrate, target_protein])\n    \n    # Chọn ra các đặc trưng cần thiết\n    features = ['calories', 'total_fat', 'carbohydrates', 'protein']\n    X = (food_df[features].to_numpy() - target_values) / target_values\n    \n    # Tạo mô hình KNN\n    knn = NearestNeighbors(n_neighbors=k)\n    knn.fit(X)\n    \n    # Tính toán tổ hợp tốt nhất dựa trên mô hình KNN\n    _, indices = knn.kneighbors(np.zeros((1, 4)))\n    \n    best_combination = []\n    for i in indices[0]:\n        best_combination.append(food_df.iloc[i]['item_name'])\n    best_values = food_df.iloc[indices[0]]\n    errors = (best_values[features].values - target_values) / target_values\n    errors_df = pd.DataFrame(errors, columns=features)\n    \n    errors_df['item_name'] = best_values['item_name'].values\n    \n    return best_combination, errors_df","user":"anonymous","dateUpdated":"2024-04-29T22:17:26+0700","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1714403784925_-2005717565","id":"20240429-162831_1110976059","dateCreated":"2024-04-29T22:16:24+0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1059","dateFinished":"2024-04-29T22:17:27+0700","dateStarted":"2024-04-29T22:17:27+0700"},{"text":"%pyspark\nheight_str = z.input(\"Nhập chiều cao (cm)\")\ngender_str = z.input(\"Nhập giới tính (Female or Male)\")\nactivity_level_str = z.input(\"Nhập mức độ lao động: (Light or Moderate or Heavy)\")\n\nheight = float(height_str)\n\n\n# Tính cân nặng lý tưởng\nweight = ideal_weight(height)\n\n# Tính nhu cầu năng lượng\ntarget_calories = energy_requirement(weight, activity_level, gender)\n\n# Tính nhu cầu các chất dinh dưỡng\ntarget_total_fat, target_carbohydrate, target_protein = nutrient_requirements(target_calories)\n\nbest_combination, errors_df = find_best_meal_combination(food_df, target_calories / 3, target_total_fat / 3, target_carbohydrate / 3, target_protein / 3)\n\nprint(\"Cân nặng lý tưởng:\", weight, \"kg\")\nprint(\"Tổ hợp món ăn tốt nhất:\")\nprint(best_combination)\n\n\nprint(\"Sai số giữa tổ hợp món ăn được chọn và mục tiêu (%):\")\nprint(errors_df.drop(['item_name'], axis = 1))","user":"anonymous","dateUpdated":"2024-04-29T22:17:29+0700","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{"Nhập chiều cao (cm)":"180","Nhập giới tính (Female or Male)":"Female","Nhập mức độ lao động: (Light or Moderate or Heavy)":"Heavy"},"forms":{"Nhập chiều cao (cm)":{"type":"TextBox","name":"Nhập chiều cao (cm)","displayName":"Nhập chiều cao (cm)","defaultValue":"","hidden":false,"$$hashKey":"object:2276"},"Nhập giới tính (Female or Male)":{"type":"TextBox","name":"Nhập giới tính (Female or Male)","displayName":"Nhập giới tính (Female or Male)","defaultValue":"","hidden":false,"$$hashKey":"object:2277"},"Nhập mức độ lao động: (Light or Moderate or Heavy)":{"type":"TextBox","name":"Nhập mức độ lao động: (Light or Moderate or Heavy)","displayName":"Nhập mức độ lao động: (Light or Moderate or Heavy)","defaultValue":"","hidden":false,"$$hashKey":"object:2278"}}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Cân nặng lý tưởng: 72.0 kg\nTổ hợp món ăn tốt nhất:\n['Bonefish Signature Pasta, Cajun Cream with Shrimp', 'Cholula Hot & Sweet Chicken Burrito', 'Spicy Monterey 12\" Sub']\nSai số giữa tổ hợp món ăn được chọn và mục tiêu (%):\n   calories  total_fat  carbohydrates  protein\n0 -0.020833  -0.062500      -0.090278   0.0625\n1 -0.072917   0.171875      -0.118056  -0.1250\n2 -0.041667   0.171875      -0.138889   0.1250\n"}]},"apps":[],"jobName":"paragraph_1714403784926_622629064","id":"20240429-162659_668706915","dateCreated":"2024-04-29T22:16:24+0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1060","dateFinished":"2024-04-29T22:17:29+0700","dateStarted":"2024-04-29T22:17:29+0700"},{"text":"\n%md \nGiả thuyết null (H0): Không có sự khác biệt đáng kể về lượng calo tiêu thụ giữa các nhóm đối tượng (ví dụ: nam và nữ).\nMức ý nghĩa thường được chọn là 0.05, tương ứng với việc chấp nhận rủi ro 5% để kết luận sai khi bác bỏ giả thuyết null.\nDựa trên dữ liệu thu thập được, sử dụng các phương pháp thống kê như t-test, ANOVA hoặc phân tích hồi quy để kiểm tra sự khác biệt về lượng calo tiêu thụ giữa các nhóm đối tượng.\nDựa trên kết quả phân tích thống kê, so sánh giá trị p-value với mức ý nghĩa đã chọn. Nếu giá trị p-value nhỏ hơn mức alpha, ta có đủ bằng chứng để bác bỏ giả thuyết null và chấp nhận giả thuyết thay thế, kết luận rằng có sự khác biệt đáng kể về lượng calo tiêu thụ giữa các nhóm đối tượng. Ngược lại, nếu giá trị p-value lớn hơn mức alpha, không đủ bằng chứng để bác bỏ giả thuyết null, ta không có đủ dữ liệu để kết luận có sự khác biệt đáng kể.\n","user":"anonymous","dateUpdated":"2024-04-29T23:27:12+0700","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1714407863123_959653717","id":"20240429-232423_1894496842","dateCreated":"2024-04-29T23:24:23+0700","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3542","dateFinished":"2024-04-29T23:27:12+0700","dateStarted":"2024-04-29T23:27:12+0700","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Giả thuyết null (H0): Không có sự khác biệt đáng kể về lượng calo tiêu thụ giữa các nhóm đối tượng (ví dụ: nam và nữ).<br/>Mức ý nghĩa thường được chọn là 0.05, tương ứng với việc chấp nhận rủi ro 5% để kết luận sai khi bác bỏ giả thuyết null.<br/>Dựa trên dữ liệu thu thập được, sử dụng các phương pháp thống kê như t-test, ANOVA hoặc phân tích hồi quy để kiểm tra sự khác biệt về lượng calo tiêu thụ giữa các nhóm đối tượng.<br/>Dựa trên kết quả phân tích thống kê, so sánh giá trị p-value với mức ý nghĩa đã chọn. Nếu giá trị p-value nhỏ hơn mức alpha, ta có đủ bằng chứng để bác bỏ giả thuyết null và chấp nhận giả thuyết thay thế, kết luận rằng có sự khác biệt đáng kể về lượng calo tiêu thụ giữa các nhóm đối tượng. Ngược lại, nếu giá trị p-value lớn hơn mức alpha, không đủ bằng chứng để bác bỏ giả thuyết null, ta không có đủ dữ liệu để kết luận có sự khác biệt đáng kể.</p>\n</div>"}]}},{"text":"\n%pyspark\nfrom scipy import stats\n\ncalories_male = [2200, 2300, 2100, 2400, 2250]\ncalories_female = [2000, 2100, 1950, 2050, 1900]\n\nt_statistic, p_value = stats.ttest_ind(calories_male, calories_female)\n\nprint(\"Giá trị t-statistic:\", t_statistic)\nprint(\"Giá trị p-value:\", p_value)\n\nalpha = 0.05\nif p_value < alpha:\n    print(\"Có đủ bằng chứng để bác bỏ giả thuyết null\")\nelse:\n    print(\"Không đủ bằng chứng để bác bỏ giả thuyết null\")","user":"anonymous","dateUpdated":"2024-04-29T23:27:38+0700","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1714408028814_768092374","id":"20240429-232708_682036924","dateCreated":"2024-04-29T23:27:08+0700","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3676","dateFinished":"2024-04-29T23:27:21+0700","dateStarted":"2024-04-29T23:27:21+0700","title":"Phản biện giả thuyết null","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Giá trị t-statistic: 4.08248290463863\nGiá trị p-value: 0.003522020859034573\nCó đủ bằng chứng để bác bỏ giả thuyết null\n"}]}},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2024-04-29T23:27:21+0700","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1714408041683_684820191","id":"20240429-232721_1553228513","dateCreated":"2024-04-29T23:27:21+0700","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3791"}],"name":"BaoCaoCuoiKi_Nhom 8","id":"2JWG4X9NE","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}